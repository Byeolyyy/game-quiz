<template>
  <view class="game-container">
    <text class="question">{{ question.text }}</text>
    <view class="options">
      <button v-for="(option, index) in question.options" 
        :key="index" 
        :class="getOptionClass(index)"
        @click="selectOption(index)">
        {{ option }}
      </button>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      level: 1,
      selected: null,
      correctAnswer: null,
      questions: [
        { text: "结合分析，小美是Bigbang中谁的粉丝?小美：今年是喜欢bigbang的第5年，我是他的梦女，我非常喜欢他在舞台上的舞姿和穿搭。", options: ["GD", "T.O.P", "大声", "太阳","胜利"], answer: 0 },
        { text: "郑雅娴最像什么动物?", options: ["老鼠", "猫", "熊", "鸭子", "松鼠"], answer: 1 },
        { text: "我的英文名叫什么?", options: ["Zavier", "Helen", "Olivia", "Eva", "Jay"], answer: 3 },
        { text: "要不要永远跟我做好朋友?", options: ["要", "不要"], answer: 0 }
      ]
    };
  },
  computed: {
    question() {
      return this.questions[this.level - 1];
    }
  },
  methods: {
    selectOption(index) {
      this.selected = index;
      this.correctAnswer = this.question.answer;

      if (index === this.correctAnswer) {
        setTimeout(() => {
          if (this.level === 4) {
            uni.navigateTo({ url: "/pages/result" });
          } else {
            let nextLevel = this.level + 1;
            uni.setStorageSync("unlockedLevels", nextLevel);
            uni.navigateTo({ url: "/pages/vine" });
          }
        }, 1000);
      }
    },
    getOptionClass(index) {
      if (this.selected === null) return "option";
      if (index === this.correctAnswer) return "option correct";
      if (index === this.selected) return "option wrong";
      return "option";
    }
  },
  onLoad(options) {
    this.level = parseInt(options.level) || 1;
  }
};
</script>

<style scoped>
.game-container {
  text-align: center;
  padding: 50px;
}
.question {
  font-size: 20px;
  margin-bottom: 20px;
}
.option {
  background-color: lightgray;
  margin: 5px;
  padding: 10px;
  border-radius: 5px;
}
.correct {
  background-color: green;
}
.wrong {
  background-color: red;
}
</style>
